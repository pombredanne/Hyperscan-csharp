name: Build & Test

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-2019]
        vs: [2019]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      working-directory: d:\a\Hyperscan-csharp\Hyperscan-csharp
    if: "!contains(github.event.head_commit.message, '[ci skip]')" 
    steps:
      - uses: actions/checkout@v2
      - name: Install cygwin base packages with chocolatey
        run: |
          choco config get cacheLocation
          choco install --no-progress cygwin
      - name: Install cygwin additional packages
        run: |
          C:\tools\cygwin\cygwinsetup.exe -qgnNdO -R C:/tools/cygwin -s http://mirrors.kernel.org/sourceware/cygwin/ -P gcc-core,gcc-g++,wget,make
        shell: cmd
      - name: Set ENV
        run: |
          echo '::set-env name=PATH::C:\tools\cygwin\bin;C:\tools\cygwin\usr\bin'
          echo '::add-path::C:\tools\cygwin\bin'
        shell: bash
      - name: Ragel
        run: |
          wget http://www.colm.net/files/ragel/ragel-6.10.tar.gz | tr -d '\r'
          tar xzvf ragel-6.10.tar.gz && rm ragel-6.10.tar.gz | tr -d '\r'
          cd ragel-6.10 | tr -d '\r'
          ./configure | tr -d '\r'
          make | tr -d '\r'
          make install | tr -d '\r'
        shell: bash
      - name: Microsoft Build tools
        run: |
          choco install microsoft-build-tools
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.100
      - name: Build
        run: dotnet build src/Hyperscan.sln --configuration Release
      - name: Test
        run: dotnet test src/Hyperscan.sln --configuration Release