name: Build & Test
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
jobs:
  build:
    strategy:
      matrix:
        os: [windows-2016]
        vs: [2016]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      root-directory: d:\a\Hyperscan-csharp\Hyperscan-csharp
      ragel-directory: d:\a\Hyperscan-csharp\Hyperscan-csharp\ragel-6.10
      src-directory: d:\a\Hyperscan-csharp\Hyperscan-csharp\hyperscan
      build-directory: d:\a\Hyperscan-csharp\Hyperscan-csharp\hyperscan\build
    if: "!contains(github.event.head_commit.message, '[ci skip]')" 
    steps:
      - uses: actions/checkout@v2
      - name: Install cygwin base packages and cmake with chocolatey
        run: |
          choco config get cacheLocation
          choco install --no-progress cygwin
          choco install --no-progress cmake --installargs 'ADD_CMAKE_TO_PATH=System'
      - name: Install cygwin additional packages
        run: |
          C:\tools\cygwin\cygwinsetup.exe -qgnNdO -R C:/tools/cygwin -s http://mirrors.kernel.org/sourceware/cygwin/ -P gcc-core,gcc-g++,wget,make
        shell: cmd
      - name: Set Cygwin ENV
        run: |
          echo '::set-env name=PATH::C:\tools\cygwin\bin;C:\tools\cygwin\usr\bin'
          echo '::add-path::C:\tools\cygwin\bin'
        shell: bash
      - name: Download Ragel
        run: |
          wget http://www.colm.net/files/ragel/ragel-6.10.tar.gz | tr -d '\r'
          tar xzvf ragel-6.10.tar.gz && rm ragel-6.10.tar.gz | tr -d '\r'
        shell: bash
        working-directory: ${{env.root-directory}}
      - name: Configure Ragel
        run: |
          bash -c ./configure
        shell: cmd
        working-directory: ${{env.ragel-directory}}
      - name: Build Ragel
        run: |
          make | tr -d '\r'
          make install | tr -d '\r'
        shell: bash
        working-directory: ${{env.ragel-directory}}
      - name: Download Boost
        run: |
          wget https://dl.bintray.com/boostorg/release/1.72.0/source/boost_1_72_0.tar.gz | tr -d '\r'
          tar xzvf boost_1_72_0.tar.gz && rm boost_1_72_0.tar.gz | tr -d '\r'
        shell: bash
        working-directory: ${{env.src-directory}}
      - name: Download PCRE
        run: |
          wget ftp://ftp.pcre.org/pub/pcre/pcre-8.41.tar.gz | tr -d '\r'
          tar xzvf pcre-8.41.tar.gz && rm pcre-8.41.tar.gz | tr -d '\r'
        shell: bash
        working-directory: ${{env.src-directory}}
      - name: Download SQLite
        run: |
          wget https://www.sqlite.org/2020/sqlite-autoconf-3310100.tar.gz | tr -d '\r'
          tar xzvf sqlite-autoconf-3310100.tar.gz && rm sqlite-autoconf-3310100.tar.gz | tr -d '\r'
        shell: bash
        working-directory: ${{env.src-directory}}
      - name: Move SQLite
        run: |
          mv sqlite-autoconf-3310100 sqlite3
        shell: cmd
        working-directory: ${{env.src-directory}}
      - name: Set Ragel ENV
        run: |
          echo '::set-env name=PATH::${{env.ragel-directory}}\ragel'
          echo '::add-path::${{env.ragel-directory}}\ragel'
      - name: Make Hyperscan
        run: |
          mkdir build
          cd build
          "C:\Program Files\CMake\bin\cmake.exe" -G "Visual Studio 15 2017 Win64" -D BOOST_ROOT=%cd%/../boost_1_72_0/ -DHAVE_AVX2=true ..
        shell: cmd
        working-directory: ${{env.src-directory}}
      - name: Build Hyperscan
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\MSBuild\15.0\Bin\MsBuild.exe" ALL_BUILD.vcxproj /t:build /p:Configuration=Release
        shell: cmd
        working-directory: ${{env.build-directory}}
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.100
      - name: Build
        run: dotnet build src/Hyperscan.sln --configuration Release
      - name: Test
        run: dotnet test src/Hyperscan.sln --configuration Release